{
  "info": {
    "_postman_id": "4c260076-f1a2-4a30-a83c-6d05d89b0e87",
    "name": "RESTful API users books managment",
    "description": "# ðŸš€ Get started here\n\nThis collection guides you through CRUD operations (GET, POST, DELETE) ",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "30511492"
  },
  "item": [
    {
      "name": "Get users",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base-url}}/users",
          "host": ["{{base-url}}"],
          "path": ["users"]
        },
        "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
      },
      "response": []
    },
    {
      "name": "Post user",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful POST request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"id\": 4,\n    \"username\": \"ahlabik\",\n    \"pass\": \"\",\n    \"hasPermission\": false\n} ",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base-url}}/users",
          "host": ["{{base-url}}"],
          "path": ["users"]
        },
        "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
      },
      "response": []
    },
    {
      "name": "Delete user",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful DELETE request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base-url}}/user/2",
          "host": ["{{base-url}}"],
          "path": ["user", "2"]
        },
        "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
      },
      "response": []
    },
    {
      "name": "Get books",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"userId\":1\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base-url}}/books",
          "host": ["{{base-url}}"],
          "path": ["books"]
        }
      },
      "response": []
    },
    {
      "name": "Get book",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"userId\":1\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base-url}}/book/2",
          "host": ["{{base-url}}"],
          "path": ["book", "2"]
        }
      },
      "response": []
    },
    {
      "name": "Post book",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"id\": 3,\r\n    \"userId\":1,\r\n    \"name\": \"kteb tahfoun\",\r\n    \"author\": \"author tahfoun\",\r\n    \"year\": 2023,\r\n    \"genre\": \"Comedy\",\r\n    \"language\": \"English\",\r\n    \"country\": \"Norway\",\r\n    \"pages\": 911}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base-url}}/books",
          "host": ["{{base-url}}"],
          "path": ["books"]
        }
      },
      "response": []
    },
    {
      "name": "delete book",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{base-url}}/book/2",
          "host": ["{{base-url}}"],
          "path": ["book", "2"]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "id",
      "value": "1"
    },
    {
      "key": "base_url",
      "value": "https://postman-rest-api-learner.glitch.me/"
    },
    {
      "key": "base-url",
      "value": "http://localhost:5000"
    }
  ]
}
